{"ast":null,"code":"var _jsxFileName = \"/home/igg/Desktop/rct/ch/chatrm/chatroom/src/App.js\";\nimport React from 'react';\nimport socketIoClient from 'socket.io-client';\nimport './App.css';\nimport Dialog from './Dialog/Dialog';\nimport Login from './Login/Login';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"logged\": false,\n      \"name\": \"\"\n    };\n    this.socket = socketIoClient(\"http://127.0.0.1:4001\");\n    this.onLog = this.onLog.bind(this);\n    this.onNewMessageTyped = this.onNewMessageTyped.bind(this);\n  }\n\n  onLog(name) {\n    this.setState({\n      logged: true,\n      \"name\": name\n    });\n    this.socket.emit(\"user logged in\", name);\n  }\n\n  onNewMessageTyped(text) {\n    this.socket.emit(\"client typed new message\", {\n      \"author\": this.state.name,\n      \"content\": text\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.logged ? React.createElement(Dialog, {\n      onNewMessageTyped: this.onNewMessageTyped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      onLog: this.onLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/igg/Desktop/rct/ch/chatrm/chatroom/src/App.js"],"names":["React","socketIoClient","Dialog","Login","App","Component","constructor","props","state","socket","onLog","bind","onNewMessageTyped","name","setState","logged","emit","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAC,gBAAU,KAAX;AAAkB,cAAS;AAA3B,KAAb;AACA,SAAKC,MAAL,GAAcR,cAAc,CAAC,uBAAD,CAA5B;AACA,SAAKS,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,KAAK,CAACG,IAAD,EAAO;AACV,SAAKC,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAE,IAAT;AAAe,cAASF;AAAxB,KAAd;AACA,SAAKJ,MAAL,CAAYO,IAAZ,CAAiB,gBAAjB,EAAmCH,IAAnC;AACD;;AAEDD,EAAAA,iBAAiB,CAACK,IAAD,EAAO;AACtB,SAAKR,MAAL,CAAYO,IAAZ,CAAiB,0BAAjB,EAA6C;AAAC,gBAAU,KAAKR,KAAL,CAAWK,IAAtB;AAA4B,iBAAYI;AAAxC,KAA7C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKV,KAAL,CAAWO,MAAX,GAEG,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKH,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,GAIG,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALT,CADF,CADA;AAaD;;AAjC+B;;AAoClC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport socketIoClient from 'socket.io-client';\nimport './App.css';\nimport Dialog from './Dialog/Dialog';\nimport Login from './Login/Login';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\"logged\": false, \"name\" : \"\"};\n    this.socket = socketIoClient(\"http://127.0.0.1:4001\");\n    this.onLog = this.onLog.bind(this);\n    this.onNewMessageTyped = this.onNewMessageTyped.bind(this);\n  }\n  \n  onLog(name) {\n    this.setState({logged: true, \"name\" : name});\n    this.socket.emit(\"user logged in\", name);\n  }\n  \n  onNewMessageTyped(text) {\n    this.socket.emit(\"client typed new message\", {\"author\": this.state.name, \"content\" : text});\n  }\n  \n  render() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">         \n          { this.state.logged \n               ? \n               <Dialog onNewMessageTyped={this.onNewMessageTyped}/>\n               : \n               <Login onLog={this.onLog}/>\n          }\n      </header>\n     \n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}