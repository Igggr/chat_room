{"ast":null,"code":"var _jsxFileName = \"/home/igg/Desktop/rct/ch/chatrm/chatroom/src/Dialog/Dialog.js\";\nimport React from 'react';\nimport socketIoClient from 'socket.io-client';\nimport Message from '../Message/Message';\nimport TypedMessage from '../TypedMessage/TypedMessage';\nimport './Dialog.css';\n\nclass Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageHistory: []\n    };\n    this.socket = socketIoClient(\"http://127.0.0.1:4001\");\n  }\n\n  componentDidMount() {\n    this.socket.on(\"update chat\", msg => {\n      console.log(msg);\n      const updatedHistory = this.state.messageHistory.concat(msg);\n      this.setState({\n        messageHistory: updatedHistory\n      });\n    });\n  }\n\n  render() {\n    let messages = this.state.messageHistory.map((msg, i) => React.createElement(Message, {\n      key: i,\n      author: msg.author,\n      content: msg.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"hello, \", this.props.name), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"dialog\"), messages, React.createElement(TypedMessage, {\n      onNewMessageTyped: this.props.onNewMessageTyped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Dialog;","map":{"version":3,"sources":["/home/igg/Desktop/rct/ch/chatrm/chatroom/src/Dialog/Dialog.js"],"names":["React","socketIoClient","Message","TypedMessage","Dialog","Component","constructor","props","state","messageHistory","socket","componentDidMount","on","msg","console","log","updatedHistory","concat","setState","render","messages","map","i","author","content","name","onNewMessageTyped"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAb;AACA,SAAKC,MAAL,GAAcT,cAAc,CAAC,uBAAD,CAA5B;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAEhB,SAAKD,MAAL,CAAYE,EAAZ,CAAe,aAAf,EAA+BC,GAAD,IAAS;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,cAAc,GAAG,KAAKR,KAAL,CAAWC,cAAX,CAA0BQ,MAA1B,CAAiCJ,GAAjC,CAAvB;AACA,WAAKK,QAAL,CAAc;AAACT,QAAAA,cAAc,EAAGO;AAAlB,OAAd;AACD,KAJD;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,cAAX,CAA0BY,GAA1B,CACX,CAACR,GAAD,EAAMS,CAAN,KAAY,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,CAAd;AAAiB,MAAA,MAAM,EAAET,GAAG,CAACU,MAA7B;AAAqC,MAAA,OAAO,EAAEV,GAAG,CAACW,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAAf;AAGA,WAAO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa,KAAKjB,KAAL,CAAWkB,IAAxB,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG,EAGFL,QAHE,EAIH,oBAAC,YAAD;AAAc,MAAA,iBAAiB,EAAE,KAAKb,KAAL,CAAWmB,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJG,CAAP;AAMH;;AA1BgC;;AA6BrC,eAAetB,MAAf","sourcesContent":["import React from 'react';\nimport socketIoClient from 'socket.io-client';\nimport Message from '../Message/Message';\nimport TypedMessage from '../TypedMessage/TypedMessage';\nimport './Dialog.css';\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {messageHistory: []};\n        this.socket = socketIoClient(\"http://127.0.0.1:4001\");\n    }\n\n    componentDidMount() {\n        \n        this.socket.on(\"update chat\", (msg) => {\n          console.log(msg);\n          const updatedHistory = this.state.messageHistory.concat(msg);\n          this.setState({messageHistory : updatedHistory});\n        });     \n    }\n\n    render() {\n        let messages = this.state.messageHistory.map(\n            (msg, i) => <Message key={i} author={msg.author} content={msg.content}></Message>\n        );\n        return <div className=\"Dialog\">\n            <div>hello, {this.props.name}</div>\n            <span>dialog</span>\n            {messages}\n            <TypedMessage onNewMessageTyped={this.props.onNewMessageTyped}></TypedMessage>\n            </div>;\n    }\n}\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}